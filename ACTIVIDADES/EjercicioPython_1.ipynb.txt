{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/TrixSanchez/IAyRN_AGO-DIC2024/blob/main/EjercicioPython_1.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "id": "4GInNkilIb_A"
      },
      "outputs": [],
      "source": [
        "# Diseño de algoritmos en Python\n",
        "\n",
        "# Adael Almanza Rodriguez 1962143\n",
        "# Alan Alonso López olveda 1919501\n",
        "# Angel Sánchez Vázquez  1901110\n",
        "\n",
        "# HORA: N1"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 1.- Desarrolla un algoritmo que le pida al usuario por su nombre y que lo salude con su nombre, excepto si se llama “Ana”, “Juan”, y “Pedro”.\n",
        "\n",
        "nombre = input(\"Introduce tu nombre: \")\n",
        "\n",
        "if nombre.isalpha():\n",
        "    if nombre in [\"Ana\", \"Juan\", \"Pedro\"]:\n",
        "        print(\"Lo siento, no puedo saludarte.\")\n",
        "    else:\n",
        "        print(\"Hola,\", nombre + \"!\")\n",
        "else:\n",
        "    print(\"El nombre debe contener solo letras.\")"
      ],
      "metadata": {
        "id": "lPi1kbRYKjaM",
        "outputId": "2951921e-c671-4132-b740-dae980042d20",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Introduce tu nombre: Angel\n",
            "Hola, Angel!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 2.- Desarrolla un algoritmo que por medio de una función, le pida al usuario una lista de N elementos y como resultado invierta el sentido de la lista.\n",
        "\n",
        "def lista_invertida():\n",
        "    while True:\n",
        "        n_input = input(\"Introduce el número de elementos de tu lista: \")\n",
        "        if n_input.isdigit() and int(n_input) > 0:\n",
        "            n = int(n_input)\n",
        "            break\n",
        "        print(\"ENTRADA NO VÁLIDA. (Introduce un número entero positivo).\")\n",
        "\n",
        "    lista = []\n",
        "    for i in range(n):\n",
        "        lista.append(input(f\"Introduce el elemento {i+1}: \"))\n",
        "\n",
        "    lista.reverse()\n",
        "    print(\"La lista invertida es:\", lista)\n",
        "\n",
        "lista_invertida()"
      ],
      "metadata": {
        "id": "beRPtK6bLMAk",
        "outputId": "ddd287b1-21af-41b4-e870-589d8c23c6ce",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Introduce el número de elementos de tu lista: 5\n",
            "Introduce el elemento 1: 1\n",
            "Introduce el elemento 2: 2\n",
            "Introduce el elemento 3: 3\n",
            "Introduce el elemento 4: \n",
            "Introduce el elemento 5: 5\n",
            "La lista invertida es: ['5', '', '3', '2', '1']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 3.- Desarrolla un algoritmo que le pregunte al usuario cuántos números de la serie de Fibonacci quiere generar y que al final los imprima.\n",
        "\n",
        "def fibonacci(n):\n",
        "\n",
        "    fib_list = []\n",
        "    a = 0\n",
        "    b = 1\n",
        "    for _ in range(n):\n",
        "        fib_list.append(a)\n",
        "        temp = a\n",
        "        a = b\n",
        "        b = temp + b\n",
        "    return fib_list\n",
        "\n",
        "def main():\n",
        "    while True:\n",
        "        n_input = input(\"¿Cuántos números de la serie de Fibonacci quieres generar? \")\n",
        "        if n_input.isdigit() and int(n_input) > 0:\n",
        "            n = int(n_input)\n",
        "            break\n",
        "        print(\"Entrada no válida. Introduce un número entero positivo.\")\n",
        "\n",
        "    print(\"La serie de Fibonacci es:\", fibonacci(n))\n",
        "\n",
        "main()"
      ],
      "metadata": {
        "id": "lF-AsyJ2Ljzr",
        "outputId": "e7ca9d0f-ee33-483d-beac-4e5aa265b305",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "¿Cuántos números de la serie de Fibonacci quieres generar? 6\n",
            "La serie de Fibonacci es: [0, 1, 1, 2, 3, 5]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 4-. crea un minijuego donde se seleccione aleatoriamente un número de entre el uno al 100 y el usuario tenga que adivinar el número\n",
        "\n",
        "import random\n",
        "\n",
        "numero_a_adivinar = random.randint(1, 100)\n",
        "intentos = 0\n",
        "\n",
        "while True:\n",
        "  intentos += 1\n",
        "  intento = int(input(\"Adivina el número (entre 1 y 100): \"))\n",
        "  if intento == numero_a_adivinar:\n",
        "   print(\"¡Felicidades! Adivinaste el número en\", intentos, \"intentos.\")\n",
        "   break\n",
        "  elif intento < numero_a_adivinar:\n",
        "   print(\"Este no es el número, es mas grande.\")\n",
        "  else:\n",
        "   print(\"Este no es el número, es menor.\")"
      ],
      "metadata": {
        "id": "VnXeq9ehzrB4",
        "outputId": "b9f226f8-b010-4b15-d867-6814d1701567",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Adivina el número (entre 1 y 100): 60\n",
            "Este no es el número, es mas grande.\n",
            "Adivina el número (entre 1 y 100): 90\n",
            "Este no es el número, es menor.\n",
            "Adivina el número (entre 1 y 100): 75\n",
            "Este no es el número, es menor.\n",
            "Adivina el número (entre 1 y 100): 70\n",
            "Este no es el número, es menor.\n",
            "Adivina el número (entre 1 y 100): 65\n",
            "Este no es el número, es menor.\n",
            "Adivina el número (entre 1 y 100): 64\n",
            "¡Felicidades! Adivinaste el número en 6 intentos.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#5-. Se le pide al usuario que seleccione un Rango de números y el programa deberá dentro del Rango de números del usuario seleccionar los números primos\n",
        "\n",
        "def es_primo(num):\n",
        "   if num <= 1:\n",
        "       return False\n",
        "   elif num <= 3:\n",
        "       return True\n",
        "   elif num % 2 == 0 or num % 3 == 0:\n",
        "       return False\n",
        "   i = 5\n",
        "   while i * i <= num:\n",
        "       if num % i == 0 or num % (i + 2) == 0:\n",
        "          return False\n",
        "       i += 6\n",
        "   return True\n",
        "\n",
        "def primos_en_rango():\n",
        "    inicio = int(input(\"Introduce el inicio del rango: \"))\n",
        "    fin = int(input(\"Introduce el fin del rango: \"))\n",
        "\n",
        "    print(\"Los números primos en el rango son:\")\n",
        "    for num in range(inicio, fin + 1):\n",
        "        if es_primo(num):\n",
        "           print(num)\n",
        "\n",
        "primos_en_rango()"
      ],
      "metadata": {
        "id": "ddaDpP1b-g4j",
        "outputId": "df2051c0-140b-4193-b398-78e8638d6b1b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Introduce el inicio del rango: 7\n",
            "Introduce el fin del rango: 30\n",
            "Los números primos en el rango son:\n",
            "7\n",
            "11\n",
            "13\n",
            "17\n",
            "19\n",
            "23\n",
            "29\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 6-. Calculadora básica con funciones para realizar operaciones de suma resta multiplicación y división\n",
        "\n",
        "def suma(a, b):\n",
        "   return a + b\n",
        "\n",
        "def resta(a, b):\n",
        "   return a - b\n",
        "\n",
        "def multiplicacion(a, b):\n",
        "   return a * b\n",
        "\n",
        "def division(a, b):\n",
        "   if b != 0:\n",
        "     return a / b\n",
        "   else:\n",
        "     return \"Error: División por cero no permitida\"\n",
        "\n",
        "def calculadora():\n",
        "    print(\"Seleccione la operación:\")\n",
        "    print(\"1. Suma\")\n",
        "    print(\"2. Resta\")\n",
        "    print(\"3. Multiplicación\")\n",
        "    print(\"4. División\")\n",
        "\n",
        "    opcion = input(\"Ingrese el número de la operación que desea realizar (1/2/3/4): \")\n",
        "\n",
        "    if opcion in ['1', '2', '3', '4']:\n",
        "       num1 = float(input(\"Ingrese el primer número: \"))\n",
        "       num2 = float(input(\"Ingrese el segundo número: \"))\n",
        "\n",
        "       if opcion == '1':\n",
        "          print(f\"Resultado: {suma(num1, num2)}\")\n",
        "       elif opcion == '2':\n",
        "          print(f\"Resultado: {resta(num1, num2)}\")\n",
        "       elif opcion == '3':\n",
        "          print(f\"Resultado: {multiplicacion(num1, num2)}\")\n",
        "       elif opcion == '4':\n",
        "          print(f\"Resultado: {division(num1, num2)}\")\n",
        "\n",
        "\n",
        "\n",
        "    else:\n",
        "       print(\"Opción no válida. Por favor, intente de nuevo.\")\n",
        "\n",
        "\n",
        "calculadora()\n"
      ],
      "metadata": {
        "id": "0YLKXWpYZAuc",
        "outputId": "9a02f4d2-db1e-463e-a3c8-c6261e0af2a5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Seleccione la operación:\n",
            "1. Suma\n",
            "2. Resta\n",
            "3. Multiplicación\n",
            "4. División\n",
            "Ingrese el número de la operación que desea realizar (1/2/3/4): 5\n",
            "Opción no válida. Por favor, intente de nuevo.\n"
          ]
        }
      ]
    }
  ]
}